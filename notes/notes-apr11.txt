things to keep in mind:

- trees have a non-constant ramification factor because the set of instructions have different numbers of parameters;
additionally, some nodes like While or If are meta-constructs that get translated automatically to more nodes

- haha its funny because i was actually picking the worst individual in each tournament

- the problem structure greatly influences the performance of the genetic algorithm

- maybe add a "For" or "Repeat" node that repeats x times?

---

- best individual may ditch perfect individuals
X wheel of fortune selection
X fitness function ((score - min) / (max - min) + 1) ^ pressure
    => problem: min can be -inf
    => solution: take min only of finite scores, grade -inf as 0 fitness
- grid search to find best parameters / operators
X 16 run sample size
X thread pool?
- different mutation operators
    - creative choices
    - single-node, not subtree
    => mutation idea: single-node mutation, deleting or generating subtrees as needed to match new node arity