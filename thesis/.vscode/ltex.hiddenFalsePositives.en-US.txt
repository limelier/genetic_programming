{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThe commands turnLeft and turnRight allow the turtle to turn 90 degrees clockwise or counter-clockwise.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThe commands place, placeUp and placeDown allow blocks to be placed in adjacent spaces.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThe place, placeUp and placeDown commands allow blocks to be placed in adjacent spaces.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThe dig, digUp and digDown commands allow erasing blocks from adjacent spaces.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qdetect, detectUp and detectDown will allow detecting blocks next to the turtle.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdetect, detectUp and detectDown will allow detecting blocks next to the turtle.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qstyle=colouredRust\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qstyle=colouredRust\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qstyle=colouredRust, language=Rust\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qstyle=colouredRust, language=Rust\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qstyle=colouredRust, language=Rust, basicstyle=\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qstyle=colouredRust, language=Rust, basicstyle=\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qarduino\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qpub(crate) const BLOCK_SPACE_SIZE: usize = 16; pub type BlockSpace = [[[u8; BLOCK_SPACE_SIZE]; BLOCK_SPACE_SIZE]; BLOCK_SPACE_SIZE];\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfontsize=\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfontsize= frame=leftline framesep=2mm rulecolor=lightgray\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qfontsize= frame=leftline framesep=2mm rulecolor=lightgray\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\Qpopulation: a group of trees, evaluated and used in a generation individual: a single tree, in a population evaluation: the process of checking the performance of every individual in a generation fitness: the weight allocated to each individual during the selection process selection: the process of building a new population from the old one, by copying individuals or crossing them together crossover: the building of one individual out of parts of two parents mutation: using randomness to modify parts of an individual in hope of creating useful new traits generation: an iteration of the overall\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QComputerCraft community, ComputerCraft Wiki MediaWiki, 12 Sep 2012\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThis method, proposed by J.R. Koza \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, is called “ramped half-and-half”.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThis measurement is done using the Sørensen–Dice coefficient\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, henceforth referred to as the “Dice index”.\\E$"}
